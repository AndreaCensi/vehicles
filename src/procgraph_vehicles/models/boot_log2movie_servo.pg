--- model boot_log2movie_servo
''' Visualizes the servoing experiments. '''
config logdir 'Base log dir'
config id_robot
config id_agent = ""
config id_episode = ""
config output 'output filename (basename without .avi)'
config bgcolor = [1,0.7,0.5]

import procgraph_vehicles

|boot_log_reader logdir=$logdir id_robot=$id_robot id_agent=$id_agent id_episode=$id_episode| -> observations 

    observations ->  |extract_from_extra fieldname='servoing'| -> extra_servoing
    observations -> |extract_from_extra fieldname='robot_state'| -> state_
    extra_servoing -> |extract_field field='obs0'| -> goal

    state_ --> |use_simulation_time| --> state

    observations -> |extract_sensels| -> sensels
    observations -> |extract_commands| -> commands
    observations -> |extract_timeinfo| -> info
    
    observations[boot_obs] -> |plotter:vehicles_cairo_display format=png| --> map_rgb

goal, sensels --> |sync|--> |plot width=450 height=150 title="" y_min=0 y_max=1| -->  |veh_image_label title="Current observations and goal"| -->  servo_rgb

    goal -> |array| -> goal_a
    sensels -> |array| -> sensels_a
    sensels_a, goal_a --> |sync| --> |-| --> |norm ord=1| -> error -> |print|
    error -> |historyt interval=10| --> error_history
    error_history -> |plot title="" width=200 height=150 y_min=0| ->  |veh_image_label bgcolor=$bgcolor  title="Error"| --> error_rgb

    
    servo_rgb, error_rgb --> |sync| --> |grid bgcolor=$bgcolor  cols=2| --> bottom
    
    map_rgb, bottom  --> |sync| -> |grid bgcolor=$bgcolor  cols=1| --> out

    out --> |mencoder file="${output}.mp4" timestamps=0|


