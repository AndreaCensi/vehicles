--- model servo_info
""" Creates the servoing statistics sidebar. """
config width = 500
config plots_height = 150
config bgcolor = [1,1,1]
config vspace = 30
input observations "boot observation structures"
output rgb "rgb stream"
    
    """ Get the extra servoing info """
    |input name=observations| --> obs
    
    obs -> |extract_from_extra fieldname='servoing_base'| -> extra_servoing
    
    """ Extract goal, sensels, and commands. """
    extra_servoing -> |extract_field field='goal'| -> |array|-> goal
    obs -> |extract_sensels| -> |array| -> sensels
    obs -> |extract_commands| -> |array| -> commands

    """ Plot comparison of current vs. goal. """
    goal, sensels --> |sync|--> |plot_cmp:plot| -->  |my_label bgcolor=$bgcolor title="Current observations and goal"| -->  |border color=$bgcolor top=$vspace| -->  cmp_rgb

    plot_cmp.width=$width 
    plot_cmp.height=$plots_height 
    # plot_cmp.format='-' 
    plot_cmp.title="" 
    plot_cmp.y_min=0 
    plot_cmp.y_max=1 
    plot_cmp.fancy_styles = [noyticks, turn_off_right, turn_off_top, spines_outward]

    """ Plot history of L2 error """ 
    sensels, goal --> |sync| --> |-| --> |norm ord=2| -> L2_error 
    
    L2_error -> |historyt interval=100| --> L2_error_history
    
    L2_error_history -> |plot_err:plot| ->  |my_label bgcolor=$bgcolor title="Error"| --> |border color=$bgcolor top=$vspace| --> error_rgb

    plot_err.title="" 
    # plot_err.format='-' 
    plot_err.width=$width
    plot_err.height=$plots_height 
    plot_err.y_min=0
    plot_err.fancy_styles = [turn_off_right, turn_off_top, spines_outward]
  
    commands -> |historyt interval=100| --> commands_history
    commands_history -> |plot_cmd:plot| ->  |my_label bgcolor=$bgcolor title="Commands"| -->  |border color=$bgcolor top=$vspace| --> cmd_rgb
    plot_cmd.title = ''
    # plot_cmd.format = '-'
    # plot_cmd.y_min=+1.1
    # plot_cmd.y_max=-1.1
    plot_cmd.symmetric = True
    plot_cmd.width=$width
    plot_cmd.height=$plots_height 
    plot_cmd.fancy_styles = [turn_off_right, turn_off_top, spines_outward]
 
# TODO: commands
    """ Compose diagrams. """
    cmp_rgb, error_rgb, cmd_rgb --> |sync| --> |grid bgcolor=[0.4,0.4,0.4] cols=1| --> |output name=rgb|
 
 
--- model my_label
""" Puts a border and a label around an image """
config title
input rgb 
output out "Image with border and label"
config bgcolor = [1,0.7,0.5]
config size = 22
config font = 'Candara'
config color = black
config bg =   white

|input name=rgb| --> |border| --> |text| --> |output name=out|

border.left = 2
border.right = 2
#border.top = 34
border.top = 20
border.bottom = 2
border.color  = $bgcolor

text.texts = [{string:$title, valign: top, halign: center, font: $font, size: $size, color: $color, bg: $bg, position: [middle,5]} ]